fun main() {
    val str = "[240p]https://stream.voidboost.cc/2/8/3/1/6/0/205bb76a5dffee47f2959f1109a63fa1:2021061109:dm1LR2toNG1SZGNnNjBYT292YUlHQUR5N1M2bEY3SGNiZ08ydGszREhLY0JldFpaS0VKTmw0S3BFSk1EN0N5VlFJTjI5MzdlV2J5cTd5ODg0RldhN3NDcUZXMDJsM1JvS2hNSnRxNW5OTWc9/s5zl0.mp4:hls:manifest.m3u8 or https://stream.voidboost.cc/58227371ee5c87e5fd97be5f8b1c8b7c:2021061109:dm1LR2toNG1SZGNnNjBYT292YUlHQUR5N1M2bEY3SGNiZ08ydGszREhLY0JldFpaS0VKTmw0S3BFSk1EN0N5VlFJTjI5MzdlV2J5cTd5ODg0RldhN3NDcUZXMDJsM1JvS2hNSnRxNW5OTWc9/2/8/3/1/6/0/s5zl0.mp4,[360p]https://stream.voidboost.cc/2/8/3/1/6/0/205bb76a5dffee47f2959f1109a63fa1:2021061109:dm1LR2toNG1SZGNnNjBYT292YUlHQUR5N1M2bEY3SGNiZ08ydGszREhLY0JldFpaS0VKTmw0S3BFSk1EN0N5VlFJTjI5MzdlV2J5cTd5ODg0RldhN3NDcUZXMDJsM1JvS2hNSnRxNW5OTWc9/v37dk.mp4:hls:manifest.m3u8 or https://stream.voidboost.cc/6478788d0704f198c38102085594d944:2021061109:dm1LR2toNG1SZGNnNjBYT292YUlHQUR5N1M2bEY3SGNiZ08ydGszREhLY0JldFpaS0VKTmw0S3BFSk1EN0N5VlFJTjI5MzdlV2J5cTd5ODg0RldhN3NDcUZXMDJsM1JvS2hNSnRxNW5OTWc9/2/8/3/1/6/0/v37dk.mp4,[480p]https://stream.voidboost.cc/2/8/3/1/6/0/205bb76a5dffee47f2959f1109a63fa1:2021061109:dm1LR2toNG1SZGNnNjBYT292YUlHQUR5N1M2bEY3SGNiZ08ydGszREhLY0JldFpaS0VKTmw0S3BFSk1EN0N5VlFJTjI5MzdlV2J5cTd5ODg0RldhN3NDcUZXMDJsM1JvS2hNSnRxNW5OTWc9/qlzyq.mp4:hls:manifest.m3u8 or https://stream.voidboost.cc/2da8baddef678947af2a0b8cd70220e3:2021061109:dm1LR2toNG1SZGNnNjBYT292YUlHQUR5N1M2bEY3SGNiZ08ydGszREhLY0JldFpaS0VKTmw0S3BFSk1EN0N5VlFJTjI5MzdlV2J5cTd5ODg0RldhN3NDcUZXMDJsM1JvS2hNSnRxNW5OTWc9/2/8/3/1/6/0/qlzyq.mp4,[720p]https://stream.voidboost.cc/2/8/3/1/6/0/205bb76a5dffee47f2959f1109a63fa1:2021061109:dm1LR2toNG1SZGNnNjBYT292YUlHQUR5N1M2bEY3SGNiZ08ydGszREhLY0JldFpaS0VKTmw0S3BFSk1EN0N5VlFJTjI5MzdlV2J5cTd5ODg0RldhN3NDcUZXMDJsM1JvS2hNSnRxNW5OTWc9/hv3fc.mp4:hls:manifest.m3u8 or https://stream.voidboost.cc/c33943e281e1d6b9f08484bdaf22b302:2021061109:dm1LR2toNG1SZGNnNjBYT292YUlHQUR5N1M2bEY3SGNiZ08ydGszREhLY0JldFpaS0VKTmw0S3BFSk1EN0N5VlFJTjI5MzdlV2J5cTd5ODg0RldhN3NDcUZXMDJsM1JvS2hNSnRxNW5OTWc9/2/8/3/1/6/0/hv3fc.mp4"
    val map = "\\[(\\d{3,})p]".toRegex().findAll(str).toList().map { it.groupValues[0] }
    val split = str.split("\\[(\\d{3,})p]".toRegex()).filter { it.isNotBlank() }
    val s1 = "or\\s(.*)\$"
    val index = 1
    val message = split.map { s ->
        s1.toRegex().findAll(s).flatMap { it.groupValues }.toList().getOrNull(index)?.replace(",","")
    }
    println(message)
}